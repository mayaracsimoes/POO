package exercicio0501;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class teste {
	
	

	
	    public static void main(String[] args) {
	        JFileChooser fileChooser = new JFileChooser();
	        fileChooser.setFileFilter(new FileNameExtensionFilter("Arquivos de Texto", "txt"));
	        int returnValue = fileChooser.showOpenDialog(null);
	        
	        if (returnValue == JFileChooser.APPROVE_OPTION) {
	            File inputFile = fileChooser.getSelectedFile();
	            String outputFileName = getOutputFileName(inputFile.getName());
	            
	            try {
	                BufferedReader reader = new BufferedReader(new FileReader(inputFile));
	                BufferedWriter writer = new BufferedWriter(new FileWriter(outputFileName));
	                
	                int k = getEncryptionKey();
	                int c;
	                while ((c = reader.read()) != -1) {
	                    int encrypted = encryptCharacter(c, k);
	                    writer.write(encrypted);
	                }
	                
	                reader.close();
	                writer.close();
	                
	                System.out.println("Arquivo criptografado com sucesso. Nome do arquivo de saída: " + outputFileName);
	            } catch (IOException e) {
	                System.out.println("Ocorreu um erro ao ler/escrever o arquivo.");
	                e.printStackTrace();
	            }
	        } else {
	            System.out.println("Nenhum arquivo selecionado.");
	        }
	    }
	    
	    private static String getOutputFileName(String inputFileName) {
	        int dotIndex = inputFileName.lastIndexOf(".");
	        String nameWithoutExtension = inputFileName.substring(0, dotIndex);
	        String extension = inputFileName.substring(dotIndex);
	        return nameWithoutExtension + "-saida" + extension;
	    }
	    
	    private static int getEncryptionKey() {
	        int k = 0;
	        while (k < 1 || k > 200) {
	            try {
	                System.out.print("Digite o valor da chave (entre 1 e 200): ");
	                BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
	                k = Integer.parseInt(reader.readLine());
	            } catch (NumberFormatException | IOException e) {
	                System.out.println("Valor inválido. Tente novamente.");
	            }
	        }
	        return k;
	    }
	    
	    private static int encryptCharacter(int c, int k) {
	        int encrypted = c + k;
	        if (encrypted > 127) {
	            encrypted = 32 + (encrypted % 127);
	        }
	        return encrypted;
	    }
}
